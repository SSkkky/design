[
  {
    "id": 1,
    "slug": "NIKE",
    "title": "나이키",
    "date": "2023.12",
    "member": "개인",
    "year": 2023,
    "github": "https://github.com/SSkkky/NIKE-WOMAN",
    "website": "https://sskkky.github.io/NIKE-WOMAN/",
    "desc": "Figma로 작성된 나이키 웹 디자인을 HTML, CSS, JavaScript로 구현한 프로젝트 입니다.",
    "features": [
      "반응형 웹 디자인",
      "모바일 및 데스크톱 호환성",
      "Figma 디자인 구현"
    ],
    "tags": ["HTML", "CSS", "JavaScript"],
    "review": {
      "title": "기초에 충실하게",
      "content": "기초 지식이 파편화되어 있던 것을 클론 프로젝트를 통해 하나로 연결하며, 지식을 '알고 있다'와 '사용한다'는 것의 차이를 배우게 된 경험이었습니다. 유연한 해상도 대응을 위해 CSS를 flex, %, viewport를 활용하여 설계하고 구현하는 과정이 재미있었습니다. 프로젝트를 진행하며 JavaScript로 다양한 클릭 이벤트를 생성하였는데, 이 과정을 통해 JavaScript가 'HTML과 CSS로 구성된 웹 페이지를 동적으로 만들어주는 언어'라는 것을 명확히 이해할 수 있었습니다."
    },
    "details": {
      "challenge": {
        "title": "부분에서 페이지로",
        "content": "이전까지는 기초적인 html 태그와 css를 사용한 부분적인 화면 구현 학습만 했었는데, 이번 프로젝트를 통해 처음으로 전체적인 웹 페이지를 구현하는 경험을 하게 되었습니다. Figma 디자인을 기반으로 전체 레이아웃을 구성하고, 각 요소의 기능과 스타일을 정확히 재현하는 데 어려움을 겪었습니다. 특히, 반응형 웹 디자인을 적용하는 과정에서 다양한 디바이스에서 일관된 사용자 경험을 제공하기 위해 많은 고민이 필요했습니다."
      },
      "goal": {
        "title": "실제 운영 페이지에 가깝게",
        "content": "단순히 카피하는 것에 그치지 않고 실제 운영 페이지에 가깝게 구현하는 것을 목표로 했습니다. 이를 위해 Figma 디자인을 철저히 분석하고, 각 요소의 기능과 스타일을 정확히 재현하는 데 집중했습니다. 또한, 반응형 웹 디자인을 통해 다양한 디바이스에서 일관된 사용자 경험을 제공하는 것을 목표로 했습니다."
      },
      "result": {
        "title": "실력의 성장",
        "content": "프로젝트를 통해 HTML, CSS, JavaScript의 기초 지식을 확실히 다질 수 있었습니다. 특히, 반응형 웹 디자인을 적용하는 과정에서 다양한 디바이스에서 일관된 사용자 경험을 제공하는 방법을 배우게 되었습니다. 또한, JavaScript를 활용하여 웹 페이지에 동적인 요소를 추가하는 방법을 익히면서, 웹 개발에 대한 이해도를 높일 수 있었습니다."
      }
    },
    "gallary": [
      {
        "image": "gallary_1.png",
        "description": "메뉴에 마우스를 올렸을 때 underline이 좌측에서 우측으로 차오로는 CSS 애니메이션 구현"
      },
      {
        "image": "gallary_2.png",
        "description": "CSS grid 레이아웃을 활용한 반응형 웹 디자인"
      },
      {
        "image": "gallary_3.png",
        "description": "observer를 활용한 lazy loading 이미지 구현"
      }
    ]
  },
  {
    "id": 2,
    "slug": "HappyPub",
    "title": "해피펍",
    "date": "2023.12~2024.01",
    "member": "팀(5명)",
    "year": 2024,
    "github": "https://github.com/SSkkky/bottle",
    "website": "https://sskkky.github.io/bottle/",
    "desc": "<해피펍>은 주류 큐레이션 쇼핑몰입니다. HTML, SCSS, JAVASCRIPT를 활용하여 유연한 웹 해상도 대응을 위한 4단계 반응형 작업을 진행하였습니다. 저는 이 팀 프로젝트에서 고객 리뷰, 통합 검색 기능을 담당하고 JSON 데이터 수집, 기획, 디자인에 참여했습니다.",
    "features": ["고객 리뷰 기능", "4단계 반응형 웹 디자인"],
    "tags": ["HTML", "CSS", "JavaScript"],
    "review": {
      "title": "함께 개발하다",
      "content": "팀 프로젝트를 통해 협업의 중요성을 깨달았습니다. 각자의 역할을 명확히 하고, 팀원들과의 소통을 통해 프로젝트를 성공적으로 완수할 수 있었습니다. 고객 리뷰 기능과 통합 검색 기능을 구현하면서 사용자 경험을 개선하는 데 집중했습니다. 이 프로젝트를 통해 JSON 데이터를 직접 만들며 구조를 이해하고 오브젝트와 배열을 작성하는 법을 익힐 수 있었습니다."
    },
    "details": {
      "challenge": {
        "title": "API를 만들고 설계하고 사용하기",
        "content": "해피펍이라는 가상의 주류 쇼핑몰에서 판매할 주류의 데이터를 수집하고 json 데이터로 정제하여 사용하는 일련의 과정을 통해 API의 구조를 이해하고, 데이터를 어떻게 설계하고 활용할 수 있는지 배웠습니다. 또한, 팀 프로젝트에서 JSON 데이터를 효과적으로 관리하고 활용하는 방법을 익혔습니다. 이를 통해 데이터의 구조와 활용 방법에 대한 깊은 이해를 얻을 수 있었습니다."
      },
      "goal": {
        "title": "마감을 위한 효율적 작업",
        "content": "각자 맡은 파트를 1차적으로 구현하고, 이후 팀원들과의 피드백을 통해 개선하는 것을 목표로 했습니다. 1차로 후기 작성하기 기능을 구현 한 후, 정렬 필터와 좋아요 기능을 구현했습니다. 2차로 후기 작성하기 기능을 local storage에 저장하도록 개선했습니다. 그리고 남는 기간동안 통합 검색 기능을 추가 구현하여 팀원들의 부담을 덜고 사용자 경험을 개선하는 데 집중했습니다."
      },
      "result": {
        "title": "협업의 시너지를 알게되다",
        "content": "팀원들과의 협업을 통해 각자의 역할을 명확히 하고, 소통을 통해 프로젝트를 성공적으로 완수하는 것을 목표로 했습니다. 서로 구현 방법이나 방향에 대한 의견을 나누고, 피드백을 주고받으며 프로젝트를 진행했습니다. 이를 통해 협업의 중요성과 효과적인 소통 방법을 배울 수 있었습니다."
      }
    },
    "gallary": [
      {
        "image": "gallary_1.png",
        "description": "mask와 gradient로 전체 평점 평균값에 따른 별 색상 변경 구현"
      },
      {
        "image": "gallary_2.png",
        "description": "max height로 간단한 아코디언 메뉴 구현"
      },
      {
        "image": "gallary_3.png",
        "description": "후기 작성시 별점 드래그 구현, local storage에 저장하여 새로고침 후에도 유지되는 기능 구현"
      },
      {
        "image": "gallary_4.png",
        "description": "json data의 filter를 통한 전체 검색 기능 구현"
      }
    ]
  },
  {
    "id": 3,
    "slug": "SFLIX",
    "title": "SFLIX",
    "date": "2024.01",
    "member": "개인",
    "year": 2024,
    "github": "https://github.com/SSkkky/SFLIX",
    "website": "https://skyflix-ten.vercel.app/",
    "desc": "<SFLIX>는 사용자가 영화와 TV 프로그램에 대한 정보를 확인할 수 있는 웹 서비스입니다. 이 서비스는 themoviedb API를 활용하여 개발되었습니다. 메인 페이지에서는 실시간 박스오피스 순위 정보를 슬라이드 형식으로 제공하며, 인기순/신규순으로 정렬된 미디어 정보를 리스트로 확인할 수 있습니다.",
    "features": [
      "영화 및 TV 프로그램 정보 제공",
      "실시간 박스오피스 순위 슬라이드",
      "인기순/신규순 정렬 기능"
    ],
    "tags": ["React", "SASS", "Zustand", "Swiper", "Axios"],
    "review": {
      "title": "API, 가능성의 확장",
      "content": "이 프로젝트를 통해 React와 SASS를 활용한 웹 개발의 기초를 다졌습니다. themoviedb API를 사용하여 실시간 데이터를 가져오는 방법을 배우고, Zustand를 이용한 상태 관리의 중요성을 깨달았습니다. Swiper 라이브러리를 활용하여 슬라이드 기능을 구현하면서 사용자 경험을 향상시키는 방법에 대해 고민하게 되었습니다. 또한, 넷플릭스 스타일의 UI 디자인을 참고하여 사용자 친화적인 인터페이스를 만드는 데 집중했습니다."
    },
    "details": {
      "challenge": {
        "title": "API 데이터 처리",
        "content": "API를 처음 사용한 프로젝트 입니다. themoviiedb API에서 데이터를 가져오는 과정에서 그 구조를 이해하고 비동기 처리와 상태 관리를 효과적으로 구현하는 데 어려움을 겪었습니다. 이를 해결하기 위해 object의 구조를 공부하고, Axios를 사용하여 API 요청을 관리하고, Zustand를 통해 전역 상태를 관리하는 방법을 익혔습니다."
      },
      "goal": {
        "title": "사용자 경험 향상",
        "content": "사용자가 영화와 TV 프로그램에 대한 정보를 쉽게 찾을 수 있도록 직관적인 UI를 구현하는 것을 목표로 했습니다. 이를 위해 인기순과 신규순으로 정렬된 리스트를 제공하고, 슬라이드 기능을 통해 실시간 박스오피스 정보를 시각적으로 표현했습니다."
      },
      "result": {
        "title": "성공적인 구현",
        "content": "프로젝트를 통해 React와 SASS를 활용한 웹 개발의 기초를 다졌으며, themoviedb API를 사용하여 실시간 데이터를 효과적으로 처리하는 방법을 익혔습니다. Zustand를 이용한 상태 관리와 Swiper 라이브러리를 활용한 슬라이드 기능 구현을 통해 사용자 경험을 향상시킬 수 있었습니다."
      }
    },
    "gallary": [
      {
        "image": "gallary_1.png",
        "description": "썸네일 이미지에 마우스를 올렸을 때 재생 버튼이 나타나도록 구현"
      },
      {
        "image": "gallary_2.png",
        "description": "메뉴에 마우스를 올렸을 때 underline이 좌측에서 우측으로 차오로는 CSS 애니메이션 구현"
      },
      {
        "image": "gallary_3.png",
        "description": "모바일 해상도 지원"
      },
      {
        "image": "gallary_4.png",
        "description": "모바일 해상도 지원"
      }
    ]
  },
  {
    "id": 4,
    "slug": "Portpolio2024",
    "title": "포트폴리오 2024",
    "date": "2024.02",
    "member": "개인",
    "year": 2024,
    "github": "https://github.com/SSkkky/MyPortfoilo",
    "website": "https://skyportfoilo.vercel.app/",
    "desc": "2024년까지 개발한 프론트엔드 프로젝트를 소개하는 웹 페이지입니다.",
    "features": ["방명록 작성 및 수정 삭제", "요소 드래그, 리사이즈"],
    "tags": ["React", "TypeScript", "zustand"],
    "review": {
      "title": "React로 구현한 포트폴리오",
      "content": "개인의 정체성을 담아내기 위해 노트북 배경화면을 컨셉으로 기획, 디자인, 개발한 포트폴리오 소개 웹사이트 입니다. 노트북 환경이라는 컨셉에 맞춰 각 메뉴를 윈도우 창 처럼 구성했습니다. 리사이즈와 드래그가 가능하도록 react-rnd 라이브러리를 사용했습니다. 다른 창과 동시에 존재한다면 특정한 창을 클릭할때마다 z-index를 추가하여 최상단에 노출되도록 했습니다."
    },
    "details": {
      "challenge": {
        "title": "기능을 구현하기 위한 과정",
        "content": "이전까지는 할수있는 범위 내에서 기능을 구현했다면, 이번 프로젝트에서는 기능을 구현하기 위해 필요한 과정을 스스로 고민하고 해결하는 경험을 했습니다. 예를 들어, 윈도우 창을 편하게 resize move하기 위해 어떤 방식으로 구현할지, 직접 구현하는게 성능에 부담이 적을지, 라이브러리를 채택하는 것이 좋을지 등을 고민하고 적용했습니다. 이를 통해 React의 상태 관리와 비동기 처리에 대한 이해도를 높일 수 있었습니다."
      },
      "goal": {
        "title": "웹 사이트를 혼자 개발해보기",
        "content": "이전 팀 프로젝트에서는 각자 맡은 파트를 구현하는 것에 집중했다면, 이번 프로젝트에서는 전체적인 웹 사이트 개발을 목표로 했습니다. 또한 개인 프로젝트이다 보니 일정 관리와 시간 분배에 유의하며 진행했습니다. 이를 통해 프로젝트 관리 능력을 향상시키고, 전체적인 웹 개발 프로세스를 이해하는 데 도움이 되었습니다."
      },
      "result": {
        "title": "나를 나타내는 웹 사이트",
        "content": "이 프로젝트를 통해 기능을 구현하는 재미를 알게되었습니다. React와 TypeScript를 활용한 웹 개발의 기초를 다졌으며, Zustand를 이용한 상태 관리와 비동기 처리에 대한 이해도를 높일 수 있었습니다. 또한, 개인의 정체성을 담아내는 웹 사이트를 개발하면서 디자인과 사용자 경험에 대한 고민을 깊게 할 수 있었습니다. 이 프로젝트는 제 개발 역량을 한 단계 끌어올리는 계기가 되었습니다."
      }
    },
    "gallary": [
      {
        "image": "gallary_1.png",
        "description": "방명록 작성, 수정, 삭제 기능 구현(mongoDB), 방명록 관련 처리시 toast 알림 구현(react-toastify)"
      },
      {
        "image": "gallary_2.png",
        "description": "메뉴 창 드래그, 리사이즈 기능 구현(react-rnd), 메뉴 클릭시 창이 최상단으로 노출되는 기능 구현"
      },
      {
        "image": "gallary_3.png",
        "description": "메뉴 클릭시 json data, id 값을 기반으로 디테일 내용이 노출되도록 하는 기능 구현"
      },
      {
        "image": "gallary_4.png",
        "description": "모바일 해상도 지원"
      }
    ]
  },
  {
    "id": 5,
    "slug": "Choding",
    "title": "초딩",
    "date": "2024.02~2024.03",
    "member": "팀(3명)",
    "year": 2024,
    "github": "https://github.com/SSkkky/choding",
    "website": "https://choding.vercel.app/",
    "desc": "초보들의 코딩 공부, 초딩은 초보 프론트엔드 개발자들이 고민과 포트폴리오를 부담없이 공유할 수 있는 웹 사이트입니다. 저는 초딩 프로젝트에서 메인(home), 회원가입, 로그인, 전체 검색, <내 프로젝트> 게시판을 개발했습니다.",
    "tags": [
      "Next.js",
      "Typescript",
      "axios",
      "SASS",
      "zustand",
      "next-auth",
      "MongoDB",
      "Firebase"
    ],
    "features": [
      "모바일/태블릿/데스크탑 웹 해상도 대응",
      "소셜 로그인, 회원 가입",
      "내 프로젝트 게시글 작성, 수정, 삭제 및 좋아요, 댓글 기능",
      "강의 검색 및 스크랩"
    ],
    "review": {
      "title": "고민하는 초딩들을 위한 서비스",
      "content": "<초딩>은 포트폴리오와 이력서를 정리하며 '이런 작은 컴포넌트 단위를 포트폴리오라고 소개해도 되는걸까?', '개발자는 이력서를 어떻게 적어야할까? 누가 알려줬으면 좋겠다' 등 많은 고민을 했던 경험을 토대로 기획한 웹 서비스입니다. 이 프로젝트를 통해 팀원들과 네이밍 규칙을 상의하고 의미를 고민한 것들이 장기적으로 코드 가독성과 유지보수성에 실질적인 영향을 준다고 느꼈습니다. 다음에 또 팀작업을 한다면 초기 세팅부터 문서화까지 더 체계화하는 방향으로 개선 하면 좋겠다고 생각했습니다."
    },
    "details": {
      "challenge": {
        "title": "내가 필요한 서비스를 구현하자",
        "content": "‘작은 컴포넌트 하나도 포트폴리오에 넣어도 될까?’라는 질문에서 시작했습니다. 실력과 기록의 경계에서 고민하며, 이력서 작성과 경험 정리에 있어 뚜렷한 기준이 없어 답답함을 느꼈고, 그것이 서비스를 기획하게 된 계기가 되었습니다."
      },
      "goal": {
        "title": "개발자의 경험 공유를 위한 도구 설계",
        "content": "포트폴리오와 이력서를 보다 쉽게 구성할 수 있도록, 컴포넌트 단위의 작업들을 모아 기록하고 소개할 수 있는 웹 서비스를 만들고자 했습니다. 서비스 사용자가 스스로의 작업을 설명하면서 개발자로서의 성장과 과정을 정리할 수 있도록 돕는 것이 핵심 목표였습니다."
      },
      "result": {
        "title": "협업과 명명, 문서화의 가치",
        "content": "프로젝트를 진행하며 팀원들과의 네이밍 규칙 설정과 문서화 기준을 공유하는 과정이 코드의 가독성과 유지보수에 실질적인 영향을 준다는 걸 체감했습니다. 다음 협업에서는 초기 셋업 단계부터 문서화와 커뮤니케이션 방식을 체계화하는 방향으로 더욱 발전시키고 싶다는 확신을 얻었습니다."
      }
    },
    "gallary": [
      {
        "image": "gallary_1.png",
        "description": "메인 페이지 디자인, 마크업, 스타일링, 메인 컨텐츠 data(json) 기획 등"
      },
      {
        "image": "gallary_2.png",
        "description": "youtube, naver, google 검색 기능 연동"
      },
      {
        "image": "gallary_3.png",
        "description": "회원가입 기능 구현(유효성 검사, 중복 확인, 비밀번호 암호화 등)"
      },
      {
        "image": "gallary_4.png",
        "description": "커뮤니티 게시판 필터 기능 구현(작성자, 제목, 내용 검색), 좋아요 기능 구현"
      },
      {
        "image": "gallary_5.png",
        "description": "커뮤니티 디테일 페이지 공유, 좋아요, 댓글 작성 및 수정 삭제 기능 구현"
      },
      {
        "image": "gallary_6.png",
        "description": "커뮤니티 게시글 작성 및 수정 기능 구현(이미지 업로드, 필터링, 유효성 검사 등)"
      }
    ]
  },
  {
    "id": 6,
    "slug": "MinchoMap",
    "title": "민초맵",
    "date": "2024.04",
    "member": "개인",
    "year": 2023,
    "github": "https://github.com/SSkkky/MinchoMap",
    "website": "https://minchomap.vercel.app/",
    "desc": "<민초맵>은 내 주변에서 민트 초코와 관련된 상품을 판매하는 곳을 쉽게 알수있는 지도기반 웹 서비스입니다.",
    "features": [
      "내 주변 가게 검색 및 메뉴 필터",
      "카카오톡 연동 로그인",
      "매장 별 후기 확인 및 작성",
      "신규 매장 등록"
    ],
    "tags": ["Vue3", "TypeScript", "kakao_auth", "kakao_map"],
    "review": {
      "title": "API, 가능성의 확장",
      "content": "<민초맵>은 스스로 정말 사용할 서비스를 만들어보자는 취지로 기획된 웹사이트입니다. 낮은 러닝 커브와 빠른 렌더 속도, 프론트엔드에서 인기있는 프레임워크를 경험해보고 싶어서 Vue를 선택했고 빠르고 최적화된 빌드를 위해 Vite를 선택했습니다. 개발하면서 React에서 이렇게 작성했던 문법을 어떻게 사용해야할까? 라는 생각으로 Vue의 문법을 공부하니 보다 if, for 등의 문법이 직관적으로 느껴졌습니다. 그리고 카카오맵을 구현하며 외부 라이브러리를 필요한 부분만 적재적소로 활용하는 연습을 할 수 있었고, 카카오 로그인을 구현하며 REST API의 요청을 준수하며 통신, jwt 토큰을 활용해 로그인을 구현하는 경험을 할 수 있었습니다."
    },
    "details": {
      "challenge": {
        "title": "지도 API와 인증 시스템의 통합",
        "content": "지도 기반 서비스는 UI와 UX 양쪽에서 세심한 조정이 필요했습니다. 특히 카카오맵 API와 카카오톡 로그인 API를 연동하면서 인증 흐름과 위치 기반 데이터를 하나의 서비스로 묶는 데 어려움이 있었습니다. 지도 위에 매장을 표시하고, 메뉴나 후기 데이터를 연동하여 인터랙션을 구성하는 과정에서 컴포넌트 간의 상태 흐름을 정리하는 데 시간도 많이 걸렸습니다. 이 과정을 통해 API 명세 파악, 비동기 처리 흐름 설계, 인증 토큰 관리에 대한 실질적인 경험을 쌓을 수 있었습니다."
      },
      "goal": {
        "title": "실사용자 중심의 기능 설계",
        "content": "실제로 내가 사용할 수 있는 서비스를 만들고자 했기 때문에 사용자 경험을 가장 우선순위에 두었습니다. 주변 매장을 손쉽게 찾고, 메뉴나 리뷰 정보를 빠르게 확인할 수 있어야 했고, 새롭게 생긴 가게도 직접 제보할 수 있는 기능을 추가하여 커뮤니티적인 요소도 도입했습니다. 민초라는 독특한 주제를 중심으로 사용자가 즐기고 탐색할 수 있는 흐름을 만들기 위해 전체 UI/UX 흐름을 반복적으로 다듬었습니다."
      },
      "result": {
        "title": "API와 프론트엔드의 유기적인 연결",
        "content": "Vue3와 TypeScript 조합을 통해 안정적인 컴포넌트 개발을 경험했고, Vite를 활용한 빠른 빌드 환경도 만족스러웠습니다. 카카오맵 API를 통해 위치 기반 기능을 구현하고, 카카오톡 로그인으로 인증 흐름을 안정화하면서 외부 API들을 유기적으로 연결하는 역량을 키울 수 있었습니다. 단순한 정보 제공이 아닌 실질적인 사용자 행동 흐름을 고려한 구조 설계를 통해, 개인 프로젝트임에도 불구하고 완성도 높은 서비스를 구축할 수 있었습니다."
      }
    },
    "gallary": [
      {
        "image": "gallary_1.png",
        "description": "위치 기반 지도 서비스 구현(kakao map api), 카카오톡 로그인 기능 구현, 메뉴 클릭시 해당 매장 위치로 지도 이동 기능 구현"
      },
      {
        "image": "gallary_2.png",
        "description": "매장별 평점, 메뉴, 위치 정보 제공, 리뷰 보기, 작성, 수정, 삭제 기능 구현"
      },
      {
        "image": "gallary_3.png",
        "description": "맛집 제보 기능 구현(위치, 메뉴, 가격)"
      },
      {
        "image": "gallary_4.png",
        "description": "관리자 기능 구현(맛집 제보 승인, 매장 등록, 수정, 삭제)"
      }
    ]
  }
]
